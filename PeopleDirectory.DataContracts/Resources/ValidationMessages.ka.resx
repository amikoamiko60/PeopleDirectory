<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BirthDateInvalid" xml:space="preserve">
    <value>პირი უნდა იყოს მინიმუმ 18 წლის.</value>
  </data>
  <data name="BirthDateRequired" xml:space="preserve">
    <value>დაბადების თარიღი სავალდებულოა.</value>
  </data>
  <data name="CityIdRequired" xml:space="preserve">
    <value>ქალაქის იდენტიფიკატორი სავალდებულოა.</value>
  </data>
  <data name="CityNotFound" xml:space="preserve">
    <value>ქალაქი არ მოიძებნა.</value>
  </data>
  <data name="CityNotFoundMessage" xml:space="preserve">
    <value>ქალაქი არ არსებობს.</value>
  </data>
  <data name="GenderInvalid" xml:space="preserve">
    <value>სქესის მნიშვნელობა უნდა იყოს "ქალი" ან "კაცი".</value>
  </data>
  <data name="GenderRequired" xml:space="preserve">
    <value>სქესი სავალდებულოა.</value>
  </data>
  <data name="IndividualNotFound" xml:space="preserve">
    <value>ადამიანი არ მოიძებნა.</value>
  </data>
  <data name="InvalidFile" xml:space="preserve">
    <value>ფაილი არასოწრია.</value>
  </data>
  <data name="NameInvalidCharacters" xml:space="preserve">
    <value>სახელი უნდა შეიცავდეს მხოლოდ ქართულ ან ლათინურ სიმბოლოებს.</value>
  </data>
  <data name="NameMaxLength" xml:space="preserve">
    <value>სახელი არ უნდა აღემატებოდეს 50 სიმბოლოს.</value>
  </data>
  <data name="NameMinLength" xml:space="preserve">
    <value>სახელი უნდა შედგებოდეს მინიმუმ 2 სიმბოლოსგან.</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>სახელი სავალდებულოა.</value>
  </data>
  <data name="OneOrBothIndividualNotFound" xml:space="preserve">
    <value>ერთი ან ორივე პირი ვერ მოიძებნა.</value>
  </data>
  <data name="PersonalNumberInvalid" xml:space="preserve">
    <value>პირადი ნომერი უნდა შეიცავდეს 11 ციფრს.</value>
  </data>
  <data name="PersonalNumberRequired" xml:space="preserve">
    <value>პირადი ნომერი სავალდებულოა.</value>
  </data>
  <data name="PhoneNumberMaxLength" xml:space="preserve">
    <value>ნომერი არ უნდა აღემატებოდეს 50 სიმბოლოს.</value>
  </data>
  <data name="PhoneNumberMinLength" xml:space="preserve">
    <value>ნომერი უნდა შედგებოდეს მინიმუმ 4 სიმბოლოსგან.</value>
  </data>
  <data name="PhoneTypeInvalid" xml:space="preserve">
    <value>ნომრის ტიპი უნდა იყოს "მობილური", "ოფისის" ან "სახლის".</value>
  </data>
  <data name="PhotoPathInvalid" xml:space="preserve">
    <value>სურათის ფაილის მისამართი არასწორია.</value>
  </data>
  <data name="RelatedPersonTypeInvalid" xml:space="preserve">
    <value>კავშირის ტიპი უნდა იყოს "კოლეგა", "ნაცნობი", "ნათესავი" ან "სხვა".</value>
  </data>
  <data name="RelationshipAlreadyExists" xml:space="preserve">
    <value>კავშირი უკვე არსებობს.</value>
  </data>
  <data name="RelationshipNotFound" xml:space="preserve">
    <value>კავშირი არ მოიძებნა.</value>
  </data>
  <data name="SurnameInvalidCharacters" xml:space="preserve">
    <value>გვარი უნდა შეიცავდეს მხოლოდ ქართულ ან ლათინურ სიმბოლოებს.</value>
  </data>
  <data name="SurnameMaxLength" xml:space="preserve">
    <value>გვარი არ უნდა აღემატებოდეს 50 სიმბოლოს.</value>
  </data>
  <data name="SurnameMinLength" xml:space="preserve">
    <value>გვარი უნდა შედგებოდეს მინიმუმ 2 სიმბოლოსგან.</value>
  </data>
  <data name="SurnameRequired" xml:space="preserve">
    <value>გვარი სავალდებულოა.</value>
  </data>
  <data name="UnexpectedErrorMessage" xml:space="preserve">
    <value>გაუთვალისწინებელი შეცდომა.</value>
  </data>
  <data name="UnsupportedFileFormat" xml:space="preserve">
    <value>ფაილის ფორმატი არ არის დაშვებული.</value>
  </data>
</root>